{
    "sourceFile": "example/src/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752836686177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752836700167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,6 +112,37 @@\n   container: {\n     flex: 1,\n     alignItems: 'center',\n     justifyContent: 'center',\n+    padding: 20,\n+    backgroundColor: '#f5f5f5',\n   },\n+  title: {\n+    fontSize: 24,\n+    fontWeight: 'bold',\n+    marginBottom: 20,\n+    color: '#333',\n+  },\n+  status: {\n+    fontSize: 16,\n+    marginBottom: 30,\n+    color: '#666',\n+  },\n+  button: {\n+    backgroundColor: '#007AFF',\n+    paddingHorizontal: 30,\n+    paddingVertical: 15,\n+    borderRadius: 8,\n+    marginBottom: 30,\n+  },\n+  buttonText: {\n+    color: 'white',\n+    fontSize: 16,\n+    fontWeight: '600',\n+  },\n+  note: {\n+    fontSize: 14,\n+    color: '#666',\n+    textAlign: 'center',\n+    lineHeight: 20,\n+  },\n });\n"
                }
            ],
            "date": 1752836686177,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity, Alert } from 'react-native';\nimport {\n  ExpoOAuthAdapter,\n  useOAuthConfig,\n  OAuthCallbackScreen,\n  type ExpoOAuthConfig\n} from 'oauth-expo';\n\nexport default function App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [oauthAdapter, setOAuthAdapter] = useState<ExpoOAuthAdapter | null>(null);\n\n  // Example OAuth configuration\n  const config: ExpoOAuthConfig = {\n    clientId: 'demo-client-id',\n    endpoints: {\n      authorization: 'https://demo-oauth.example.com/oauth/authorize',\n      token: 'https://demo-oauth.example.com/oauth/token',\n      revocation: 'https://demo-oauth.example.com/oauth/revoke',\n    },\n    redirectUri: 'oauth-expo-example://auth/callback',\n    scopes: ['read', 'write'],\n    scheme: 'oauth-expo-example',\n    path: 'auth/callback',\n  };\n\n  useEffect(() => {\n    const adapter = new ExpoOAuthAdapter(config);\n    setOAuthAdapter(adapter);\n\n    // Check if user is already authenticated\n    adapter.isAuthenticated().then(authenticated => {\n      setIsAuthenticated(authenticated);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleLogin = async () => {\n    if (!oauthAdapter) return;\n\n    try {\n      const authResult = await oauthAdapter.generateAuthorizationUrl();\n\n      // In a real app, you would open the auth URL in a browser\n      // For demo purposes, we'll just show an alert\n      Alert.alert(\n        'OAuth Demo',\n        `In a real app, this would open:\\n${authResult.authUrl.substring(0, 100)}...`,\n        [\n          { text: 'OK' }\n        ]\n      );\n    } catch (error) {\n      Alert.alert('Error', error instanceof Error ? error.message : 'Unknown error');\n    }\n  };\n\n  const handleLogout = async () => {\n    if (!oauthAdapter) return;\n\n    try {\n      await oauthAdapter.logout();\n      setIsAuthenticated(false);\n      Alert.alert('Success', 'Logged out successfully');\n    } catch (error) {\n      Alert.alert('Error', error instanceof Error ? error.message : 'Unknown error');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.container}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>OAuth Expo Example</Text>\n\n      <Text style={styles.status}>\n        Status: {isAuthenticated ? 'Authenticated' : 'Not Authenticated'}\n      </Text>\n\n      {!isAuthenticated ? (\n        <TouchableOpacity style={styles.button} onPress={handleLogin}>\n          <Text style={styles.buttonText}>Login with OAuth</Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity style={styles.button} onPress={handleLogout}>\n          <Text style={styles.buttonText}>Logout</Text>\n        </TouchableOpacity>\n      )}\n\n      <Text style={styles.note}>\n        This is a demo app showing oauth-expo library integration.\n        {'\\n\\n'}\n        Features demonstrated:\n        {'\\n'}• OAuth configuration\n        {'\\n'}• Authentication state management\n        {'\\n'}• Login/logout flows\n        {'\\n'}• ExpoOAuthAdapter usage\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"
        }
    ]
}