{
    "sourceFile": "src/__tests__/index.test.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1752841419519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1752841419519,
            "name": "Commit-0",
            "content": "import * as OAuthExpo from '../index';\n\ndescribe('oauth-expo exports', () => {\n  it('should export all required components and utilities', () => {\n    // Adapters\n    expect(OAuthExpo.ExpoStorageAdapter).toBeDefined();\n    expect(OAuthExpo.ExpoHttpAdapter).toBeDefined();\n    expect(OAuthExpo.ExpoPKCEAdapter).toBeDefined();\n\n    // Hooks\n    expect(OAuthExpo.useOAuthCallback).toBeDefined();\n    expect(OAuthExpo.useOAuthConfig).toBeDefined();\n\n    // Components\n    expect(OAuthExpo.OAuthCallbackScreen).toBeDefined();\n\n    // Main adapter\n    expect(OAuthExpo.ExpoOAuthAdapter).toBeDefined();\n  });\n\n  it('should export TypeScript types', () => {\n    // This test ensures types are properly exported\n    // TypeScript compilation will fail if types are not exported correctly\n    const config: OAuthExpo.ExpoOAuthConfig = {\n      clientId: 'test',\n      endpoints: {\n        authorization: 'https://auth.example.com/authorize',\n        token: 'https://auth.example.com/token',\n      },\n      redirectUri: 'myapp://callback',\n      scopes: ['read'],\n    };\n\n    expect(config).toBeDefined();\n  });\n\n  it('should allow instantiation of main classes', () => {\n    expect(() => new OAuthExpo.ExpoStorageAdapter()).not.toThrow();\n    expect(() => new OAuthExpo.ExpoHttpAdapter()).not.toThrow();\n    expect(() => new OAuthExpo.ExpoPKCEAdapter()).not.toThrow();\n\n    const config: OAuthExpo.ExpoOAuthConfig = {\n      clientId: 'test',\n      endpoints: {\n        authorization: 'https://auth.example.com/authorize',\n        token: 'https://auth.example.com/token',\n      },\n      redirectUri: 'myapp://callback',\n      scopes: ['read'],\n    };\n\n    expect(() => new OAuthExpo.ExpoOAuthAdapter(config)).not.toThrow();\n  });\n});\n"
        }
    ]
}